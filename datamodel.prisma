type User {
  id: ID! @id
  nickname: String! @unique
  email: String! @unique
  pwd: String! 
  isMaster: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  avatar: Image @relation(name: "AvartarOfUser", link: INLINE)
  posts: [Post!]! @relation(name: "PostOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfUser", onDelete: CASCADE)
  followedBy: [User!]! @relation(name: "UserFollows", references: [id])
  following: [User!]! @relation(name: "UserFollows", references: [id])
  rooms: [MessageRoom!]! @relation(name: "MessageRoomOfUser")
  alerts: [Alert!]! @relation(name: "AlertOfUser", onDelete: CASCADE)
}

type Post {
  id: ID! @id
  title: String! @length(max: 200)
  description: String @length(max: 500)
  video: Video!
  user: User! @relation(name: "PostOfUser")
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  status: PostStatus!
  room: MessageRoom @relation(name: "PostOfMessageRoom", link: INLINE)
}

type Like {
  id: ID! @id
  user: User! @relation(name: "LikeOfUser")
  post: Post! @relation(name: "LikeOfPost")
}

type Image {
  id: ID! @id
  url: String!
  user: User @relation(name: "AvartarOfUser")
}

type Video {
  id: ID! @id
  url: String!
  url_240p: String
  url_320p: String
  url_480p: String
  url_720p: String
  url_1080p: String
  status: String
}

type MessageRoom {
  id: ID! @id 
  participants: [User!]! @relation(name: "MessageRoomOfUser")
  messages: [Message!]! @relation(name: "MessageOfRoom")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  post: Post @relation(name: "PostOfMessageRoom")
}

type Message {
  id: ID! @id 
  content: String! 
  from: User! @relation(name: "From")
  to: User @relation(name: "To")
  room: MessageRoom! @relation(name: "MessageOfRoom", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Alert {
  id: ID! @id
  user: User! @relation(name: "AlertOfUser")
  content: String! 
}

type Notice {
  id: ID! @id 
  title: String!
  description: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum PostStatus {
  PUBLIC
  PRIVATE
}

