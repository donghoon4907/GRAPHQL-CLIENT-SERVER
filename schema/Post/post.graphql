type Query {
  getPosts(
    skip: Int
    first: Int
    searchKeyword: String
    orderBy: PostOrderByInput
  ): PostList!

  getPost(postId: String!): Post!

  getFeed(skip: Int, first: Int, orderBy: PostOrderByInput): [Post!]!
}

type Mutation {
  addPost(title: String!, description: String, files: [String!]): Post!

  updatePost(
    title: String!
    description: String
    files: [String!]
    postId: String!
  ): Post!

  deletePost(postId: String!): Post!

  addComment(content: String!, postId: String!): Comment!

  updateComment(
    content: String!
    postId: String!
    userId: String
    commentId: String!
  ): Comment!

  deleteComment(commentId: String!): Comment!

  likePost(postId: String!): Boolean!

  acceptPost(postId: String!): Boolean!
}

enum PostOrderByInput {
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PostList {
  posts: [Post!]!
  count: Int!
}
